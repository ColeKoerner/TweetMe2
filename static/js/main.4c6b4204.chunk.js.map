{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setnextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","FeedList","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponet","setNewTweets","canTweet","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.4c6b4204.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data){\n    let jsonData;\n    if (data){\n        jsonData = JSON.stringify(data);\n    }\n\n    const xhr = new XMLHttpRequest()\n    const url = `http://localhost:8000/api${endpoint}`\n    xhr.responseType = \"json\"\n    const csrftoken = getCookie('csrftoken');\n    xhr.open(method, url)\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    if (csrftoken) {\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n    }\n    xhr.onload = function() {\n        if(xhr.status === 403){\n            const detail = xhr.response.detail\n            if (detail === \"Authentication credentials were not provided.\"){\n                if (window.location.href.indexOf(\"login\") === -1) {\n                    window.location.href = \"/login?showLoginRequired=true\"\n                }\n            }\n        }\n        callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e) {\n        callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send(jsonData)\n}","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = \"/tweets/feed/\"\n    if (nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = \"/tweets/global/\"\n    if (username){\n        endpoint = `/tweets/global/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetAction(tweetId, action, callback){\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleActionBackendEvent = (response, status) => {\n        console.log(response, status)\n        if ((status === 200 || status === 201) && didPerformAction) {\n            didPerformAction(response, status) \n        }\n    }\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}","import React from 'react'\n\nexport function UserLink (props) {\n    const {username} = props\n    const handleUserLink = (event) => {\n        window.location.href = `/profile/${username}`\n    }\n    return <span className='pointer' onClick={handleUserLink}>\n        {props.children}\n    </span>\n}\n\nexport function UserDisplay(props){\n    const {user, includeFullName, hideLink} = props\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} - ` : null\n\n    return <React.Fragment>\n        {nameDisplay}\n        {hideLink === true ?  `@${user.username}` : <UserLink username={user.username}> @{user.username} </UserLink>}\n    </React.Fragment>\n}\n\nexport function UserPicture (props) {\n    const {user, hideLink} = props\n    const userIdSpan = <span className='mx-2 px-3 py-2 rounded-circle bg-dark text-white'>\n        {user.username[0]}\n    </span>\n    return hideLink === true ? userIdSpan : <UserLink username={user.username}> {userIdSpan} </UserLink>\n}","import React from 'react'\nimport numeral from 'numeral'\n\nexport function DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n}","import React, { useState, useEffect } from 'react'\n\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup'\n\nimport {UserDisplay, UserPicture} from './components'\n\nimport { DisplayCount } from './utils'\n\nfunction ProfileBadge (props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading){\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n        <UserPicture user={user} hideLink/>\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\n        <p>{user.location}</p>\n        <p>{user.bio}</p>\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb} </button>\n    </div> : null\n}\n\nexport function ProfileBadgeComponent (props) {\n    const {username} = props\n    // lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n\n    const handleBackendLookup = (response, status) =>{\n        if (status === 200){\n            setProfile(response)\n        }\n    }\n    useEffect(()=>{\n        if (didLookup === false){\n            apiProfileDetail(username, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [didLookup, setDidLookup, username])\n\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            if (status===200) {\n                setProfile(response)\n                // apiProfileDetail(username, handleBackendLookup)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\n}","import {backendLookup} from '../lookup/components'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = { action: `${action && action}`.toLowerCase() }\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\n}","import React, {useState} from 'react'\n\nimport { ActionBtn } from './buttons'\n\nimport { UserDisplay, UserPicture } from '../profiles'\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet  retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n}\n\nexport function Tweet(props) {\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\n\n    const path = window.location.pathname\n    const match = path.match(/(?<tweetid>\\d+)/)\n    const urlTweetId = match ? match.groups.tweetid : -1\n\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n            setActionTweet(newActionTweet)\n        } else if (status === 201){\n            if (didRetweet){\n                didRetweet(newActionTweet)\n            }\n        }\n    }\n\n    return <div className={className}>\n        {isRetweet === true && <div className='mb-2'>\n            <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n        </div>}\n        <div className='d-flex'>\n            <div className=''>\n                <UserPicture user={tweet.user} />\n            </div>\n            <div className='col-11'>\n\n            <div>\n                <p>\n                    <UserDisplay includeFullName user={tweet.user} />\n                </p>\n                <p>{tweet.content}</p>\n                <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n            </div>\n        <div className='btn btn-group px-0'> \n            {(actionTweet && hideActions !== true) && <React.Fragment>\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}} />\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"UnLike\"}} />\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}} />\n            </React.Fragment>}\n            \n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n        </div>\n        </div>\n    </div>\n    </div>\n}","import React, {useEffect, useState} from 'react'\n\nimport {Tweet} from \"./detail\";\n\nimport {apiTweetList} from './lookup'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setnextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() =>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() =>{\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if(status === 200){\n                    setnextUrl(response.next)\n                    setTweetsInit(response.results)\n                    setTweetsDidSet(true)\n                } else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n        event.preventDefault()\n        if (nextUrl !== null) {\n            const handleLoadNextResponse = (response, status) =>{\n                if(status === 200){\n                    setnextUrl(response.next)\n                    const newTweets = [...tweets].concat(response.results)\n                    setTweetsInit(newTweets)\n                    setTweets(newTweets)\n                } else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return <React.Fragment>{ tweets.map((item, index)=>{\n        return <Tweet \n        tweet={item} \n        didRetweet = {handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`}/>\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n}  \n","import React, {useEffect, useState} from 'react'\n\nimport {Tweet} from \"./detail\";\n\nimport {apiTweetFeed} from './lookup'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setnextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() =>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() =>{\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if(status === 200){\n                    setnextUrl(response.next)\n                    setTweetsInit(response.results)\n                    setTweetsDidSet(true)\n                }\n            }\n            apiTweetFeed(handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n        event.preventDefault()\n        if (nextUrl !== null) {\n            const handleLoadNextResponse = (response, status) =>{\n                if(status === 200){\n                    setnextUrl(response.next)\n                    const newTweets = [...tweets].concat(response.results)\n                    setTweetsInit(newTweets)\n                    setTweets(newTweets)\n                }\n            }\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return <React.Fragment>{ tweets.map((item, index)=>{\n        return <Tweet \n        tweet={item} \n        didRetweet = {handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`}/>\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n}  \n","import React from 'react'\n\nimport {apiTweetCreate} from './lookup'\n\nexport function TweetCreate(props) {\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    const handleBackendUpdate = (response, status) =>{\n        if (status === 201){\n            didTweet(response)\n        } else {\n            console.log(response)\n            alert(\"An error occured at create tweet. Try again.\")\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        // backend api response requester\n        apiTweetCreate(newVal, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n            <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n}\n","import React, {useEffect, useState} from 'react'\n\nimport { TweetsList } from \"./list\";\n\nimport { FeedList } from \"./feed\";\n\nimport { TweetCreate } from './create';\n\nimport {apiTweetDetail} from './lookup';\n\nimport { Tweet } from './detail';\n\nexport function TweetsComponet(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleDidTweet = (newTweet) =>{\n        // backend api response handler\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(newTweet)\n    }\n    return <div className={props.className}>\n            {canTweet === true && <TweetCreate didTweet={handleDidTweet} className='col-12 mb-3' />}\n        <TweetsList newTweets={newTweets} {...props}/>\n    </div>\n\n}\n\nexport function FeedComponet(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleDidTweet = (newTweet) =>{\n        // backend api response handler\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(newTweet)\n    }\n    return <div className={props.className}>\n            {canTweet === true && <TweetCreate didTweet={handleDidTweet} className='col-12 mb-3' />}\n        <FeedList newTweets={newTweets} {...props}/>\n    </div>\n\n}\n\nexport function TweetDetailComponent(props){\n    const {tweetId} = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n\n    const handleBackendLookup = (response, status) =>{\n        if (status === 200){\n            setTweet(response)\n        } else {\n            alert(\"Error while finding tweet\")\n        }\n    }\n    useEffect(()=>{\n        if (didLookup === false){\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [didLookup, setDidLookup, tweetId])\n    \n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nimport {TweetsComponet} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponet />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ProfileBadgeComponent } from './profiles';\nimport { FeedComponet, TweetsComponet, TweetDetailComponent } from './tweets';\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nconst e = React.createElement\n\nconst tweetsEl = document.getElementById(\"apc-web\")\nif (tweetsEl){\n  ReactDOM.render(\n    e(TweetsComponet, tweetsEl.dataset), \n    tweetsEl\n  );\n}\n\nconst tweetFeedEl = document.getElementById(\"apc-web-feed\")\nif (tweetFeedEl){\n  ReactDOM.render(\n    e(FeedComponet, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".apc-web-detail\")\n\ntweetDetailElements.forEach(container=>{\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), \n    container\n  );\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".apc-web-profile-badge\")\n\nuserProfileBadgeElements.forEach(container=>{\n  ReactDOM.render(\n    e(ProfileBadgeComponent, container.dataset), \n    container\n  );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}