{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponet","setNewTweets","canTweet","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.d2306e62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data){\n    let jsonData;\n    if (data){\n        jsonData = JSON.stringify(data);\n    }\n\n    const xhr = new XMLHttpRequest()\n    const url = `http://localhost:8000/api${endpoint}`\n    xhr.responseType = \"json\"\n    const csrftoken = getCookie('csrftoken');\n    xhr.open(method, url)\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    if (csrftoken) {\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n    }\n    xhr.onload = function() {\n        if(xhr.status === 403){\n            const detail = xhr.response.detail\n            if (detail === \"Authentication credentials were not provided.\"){\n                window.location.href = \"/login?showLoginRequired=true\"\n            }\n        }\n        callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e) {\n        callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send(jsonData)\n}","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleActionBackendEvent = (response, status) => {\n        console.log(response, status)\n        if ((status === 200 || status === 201) && didPerformAction) {\n            didPerformAction(response, status) \n        }\n    }\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetList(username, callback) {\n    let endpoint = \"/tweets/\"\n    if (username){\n        endpoint = `/tweets/?username=${username}`\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetAction(tweetId, action, callback){\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}","import React, {useState} from 'react'\n\nimport { ActionBtn } from './buttons'\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <div className='row'>\n            <div className='col-11 mx-auto p-3 border rounded'>\n                <p className='mb-0 text-muted small'>Retweet</p>\n                <Tweet hideActions className={' '} tweet={tweet.parent} />\n            </div>\n        </div> : null\n}\n\nexport function Tweet(props) {\n    const {tweet, didRetweet, hideActions} = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n\n    const path = window.location.pathname\n    const match = path.match(/(?<tweetid>\\d+)/)\n    const urlTweetId = match ? match.groups.tweetid : -1\n\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n            setActionTweet(newActionTweet)\n        } else if (status === 201){\n            if (didRetweet){\n                didRetweet(newActionTweet)\n            }\n        }\n    }\n\n    return <div className={className}>\n            <div>\n                <p>{tweet.id} - {tweet.content}</p>\n                <ParentTweet tweet={tweet} />\n            </div>\n        <div className='btn btn-group'> \n            {(actionTweet && hideActions !== true) && <React.Fragment>\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}} />\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"UnLike\"}} />\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}} />\n            </React.Fragment>}\n            \n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n        </div>\n    </div>\n}","import React, {useEffect, useState} from 'react'\n\nimport {Tweet} from \"./detail\";\n\nimport {apiTweetList} from './lookup'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(() =>{\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() =>{\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if(status === 200){\n                    // const finalTweetsInit = [...response].concat(tweetsInit)\n                    setTweetsInit(response)\n                    setTweetsDidSet(true)\n                } else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    return tweets.map((item, index)=>{\n        return <Tweet \n        tweet={item} \n        didRetweet = {handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`}/>\n    })\n}  \n","import React from 'react'\n\nimport {apiTweetCreate} from './lookup'\n\nexport function TweetCreate(props) {\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n    const handleBackendUpdate = (response, status) =>{\n        if (status === 201){\n            didTweet(response)\n        } else {\n            console.log(response)\n            alert(\"An error occured at create tweet. Try again.\")\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        // backend api response requester\n        apiTweetCreate(newVal, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n            <form onSubmit={handleSubmit}>\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n            </form>\n        </div>\n}\n","import React, {useEffect, useState} from 'react'\n\nimport { TweetsList } from \"./list\";\n\nimport { TweetCreate } from './create';\n\nimport {apiTweetDetail} from './lookup';\n\nimport { Tweet } from './detail';\n\nexport function TweetsComponet(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleDidTweet = (newTweet) =>{\n        // backend api response handler\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(newTweet)\n    }\n    return <div className={props.className}>\n            {canTweet === true && <TweetCreate didTweet={handleDidTweet} className='col-12 mb-3' />}\n        <TweetsList newTweets={newTweets} {...props}/>\n    </div>\n\n}\n\nexport function TweetDetailComponent(props){\n    const {tweetId} = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n\n    const handleBackendLookup = (response, status) =>{\n        if (status === 200){\n            setTweet(response)\n        } else {\n            alert(\"Error while finding tweet\")\n        }\n    }\n    useEffect(()=>{\n        if (didLookup === false){\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [didLookup, setDidLookup, tweetId])\n    \n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nimport {TweetsComponet} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponet />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { TweetsComponet, TweetDetailComponent } from './tweets';\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nconst e = React.createElement\n\nconst tweetsEl = document.getElementById(\"apc-web\")\nif (tweetsEl){\n  ReactDOM.render(\n    e(TweetsComponet, tweetsEl.dataset), \n    tweetsEl\n  );\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".apc-web-detail\")\n\ntweetDetailElements.forEach(container=>{\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), \n    container\n  );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}