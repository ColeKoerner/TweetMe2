{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setnextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","FeedList","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponet","setNewTweets","canTweet","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.a8799840.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data){\r\n    let jsonData;\r\n    if (data){\r\n        jsonData = JSON.stringify(data);\r\n    }\r\n\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = \"json\"\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    if (csrftoken) {\r\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n    xhr.onload = function() {\r\n        if(xhr.status === 403){\r\n            const detail = xhr.response.detail\r\n            if (detail === \"Authentication credentials were not provided.\"){\r\n                if (window.location.href.indexOf(\"login\") === -1) {\r\n                    window.location.href = \"/login?showLoginRequired=true\"\r\n                }\r\n            }\r\n        }\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n        callback({\"message\": \"The request was an error\"}, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) => {\r\n        console.log(response, status)\r\n        if ((status === 200 || status === 201) && didPerformAction) {\r\n            didPerformAction(response, status) \r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}","import React from 'react'\r\n\r\nexport function UserLink (props) {\r\n    const {username} = props\r\n    const handleUserLink = (event) => {\r\n        window.location.href = `/profile/${username}`\r\n    }\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props){\r\n    const {user, includeFullName} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} - ` : null\r\n\r\n    return <React.Fragment>\r\n        {nameDisplay}\r\n        <UserLink username={user.username}> @{user.username} </UserLink>\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n    const {user} = props\r\n    return <UserLink username={user.username}><span className='mx-2 px-3 py-2 rounded-circle bg-dark text-white'>\r\n        {user.username[0]}\r\n    </span></UserLink>\r\n}","import React, {useState} from 'react'\r\n\r\nimport { ActionBtn } from './buttons'\r\n\r\nimport { UserDisplay, UserPicture } from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet  retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n}\r\n\r\nexport function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n    const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n            setActionTweet(newActionTweet)\r\n        } else if (status === 201){\r\n            if (didRetweet){\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className={className}>\r\n        {isRetweet === true && <div className='mb-2'>\r\n            <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n        </div>}\r\n        <div className='d-flex'>\r\n            <div className=''>\r\n                <UserPicture user={tweet.user} />\r\n            </div>\r\n            <div className='col-11'>\r\n\r\n            <div>\r\n                <p>\r\n                    <UserDisplay includeFullName user={tweet.user} />\r\n                </p>\r\n                <p>{tweet.content}</p>\r\n                <ParentTweet tweet={tweet} retweeter={tweet.user}/>\r\n            </div>\r\n        <div className='btn btn-group px-0'> \r\n            {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:\"Likes\"}} />\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:\"UnLike\"}} />\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:\"Retweet\"}} />\r\n            </React.Fragment>}\r\n            \r\n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react'\r\n\r\nimport {Tweet} from \"./detail\";\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setnextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() =>{\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() =>{\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if(status === 200){\r\n                    setnextUrl(response.next)\r\n                    setTweetsInit(response.results)\r\n                    setTweetsDidSet(true)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            apiTweetList(props.username, handleTweetListLookup)\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n    \r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) =>{\r\n                if(status === 200){\r\n                    setnextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets)\r\n                    setTweets(newTweets)\r\n                } else {\r\n                    alert(\"There was an error\")\r\n                }\r\n            }\r\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>{ tweets.map((item, index)=>{\r\n        return <Tweet \r\n        tweet={item} \r\n        didRetweet = {handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`}/>\r\n    })}\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\r\n    </React.Fragment>\r\n}  \r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {Tweet} from \"./detail\";\r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setnextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() =>{\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() =>{\r\n        if (tweetsDidSet === false) {\r\n            const handleTweetListLookup = (response, status) => {\r\n                if(status === 200){\r\n                    setnextUrl(response.next)\r\n                    setTweetsInit(response.results)\r\n                    setTweetsDidSet(true)\r\n                }\r\n            }\r\n            apiTweetFeed(handleTweetListLookup)\r\n        }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n    \r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n        event.preventDefault()\r\n        if (nextUrl !== null) {\r\n            const handleLoadNextResponse = (response, status) =>{\r\n                if(status === 200){\r\n                    setnextUrl(response.next)\r\n                    const newTweets = [...tweets].concat(response.results)\r\n                    setTweetsInit(newTweets)\r\n                    setTweets(newTweets)\r\n                }\r\n            }\r\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>{ tweets.map((item, index)=>{\r\n        return <Tweet \r\n        tweet={item} \r\n        didRetweet = {handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`}/>\r\n    })}\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\r\n    </React.Fragment>\r\n}  \r\n","import React from 'react'\r\n\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props) {\r\n    const textAreaRef = React.createRef()\r\n    const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n        if (status === 201){\r\n            didTweet(response)\r\n        } else {\r\n            console.log(response)\r\n            alert(\"An error occured at create tweet. Try again.\")\r\n        }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        // backend api response requester\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n            </form>\r\n        </div>\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport { TweetsList } from \"./list\";\r\n\r\nimport { FeedList } from \"./feed\";\r\n\r\nimport { TweetCreate } from './create';\r\n\r\nimport {apiTweetDetail} from './lookup';\r\n\r\nimport { Tweet } from './detail';\r\n\r\nexport function TweetsComponet(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleDidTweet = (newTweet) =>{\r\n        // backend api response handler\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(newTweet)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleDidTweet} className='col-12 mb-3' />}\r\n        <TweetsList newTweets={newTweets} {...props}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport function FeedComponet(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleDidTweet = (newTweet) =>{\r\n        // backend api response handler\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(newTweet)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleDidTweet} className='col-12 mb-3' />}\r\n        <FeedList newTweets={newTweets} {...props}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n    const {tweetId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n\r\n    const handleBackendLookup = (response, status) =>{\r\n        if (status === 200){\r\n            setTweet(response)\r\n        } else {\r\n            alert(\"Error while finding tweet\")\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if (didLookup === false){\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [didLookup, setDidLookup, tweetId])\r\n    \r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\n\r\nimport {TweetsComponet} from './tweets'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <div>\r\n          <TweetsComponet />\r\n        </div>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { FeedComponet, TweetsComponet, TweetDetailComponent } from './tweets';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst appEl = document.getElementById('root')\r\nif (appEl) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nconst e = React.createElement\r\n\r\nconst tweetsEl = document.getElementById(\"apc-web\")\r\nif (tweetsEl){\r\n  ReactDOM.render(\r\n    e(TweetsComponet, tweetsEl.dataset), \r\n    tweetsEl\r\n  );\r\n}\r\n\r\nconst tweetFeedEl = document.getElementById(\"apc-web-feed\")\r\nif (tweetFeedEl){\r\n  ReactDOM.render(\r\n    e(FeedComponet, tweetFeedEl.dataset), tweetFeedEl);\r\n}\r\n\r\nconst tweetDetailElements = document.querySelectorAll(\".apc-web-detail\")\r\n\r\ntweetDetailElements.forEach(container=>{\r\n  ReactDOM.render(\r\n    e(TweetDetailComponent, container.dataset), \r\n    container\r\n  );\r\n})\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}